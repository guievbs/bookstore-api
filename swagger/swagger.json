{
  "openapi": "3.0.0",
  "info": {
    "title": "API de Gestão de Livraria",
    "version": "1.0.0",
    "description": "API para gerenciar uma livraria, incluindo livros, autores, pedidos e usuários."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Servidor local"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Registro de novo usuário",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "johndoe"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso"
          },
          "500": {
            "description": "Erro ao criar usuário"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login de usuário",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "johndoe"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token JWT gerado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJzb21ldXNlcjEiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE2MzM5MTE1NjAsImV4cCI6MTYzNDAwODc2MH0.8t7FzAaN3hHzXW1iQv5-HOaXZJp3F2sLMi6Z5JhTa0E"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Credenciais inválidas"
          },
          "500": {
            "description": "Erro ao fazer login"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Lista todos os usuários",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao obter usuários"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Obtém um usuário por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "500": {
            "description": "Erro ao obter usuário"
          }
        }
      },
      "put": {
        "summary": "Atualiza um usuário por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso"
          },
          "400": {
            "description": "Requisição inválida"
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "500": {
            "description": "Erro ao atualizar usuário"
          }
        }
      },
      "delete": {
        "summary": "Deleta um usuário por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário deletado com sucesso"
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "500": {
            "description": "Erro ao deletar usuário"
          }
        }
      }
    },
    "/books": {
      "get": {
        "summary": "Lista todos os livros com paginação",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de livros",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao obter livros"
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "summary": "Obtém um livro por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Livro encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Livro não encontrado"
          },
          "500": {
            "description": "Erro ao obter livro"
          }
        }
      },
      "post": {
        "summary": "Adiciona um novo livro",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Livro adicionado com sucesso"
          },
          "400": {
            "description": "Requisição inválida"
          },
          "500": {
            "description": "Erro ao adicionar livro"
          }
        }
      },
      "put": {
        "summary": "Atualiza um livro por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Livro atualizado com sucesso"
          },
          "400": {
            "description": "Requisição inválida"
          },
          "404": {
            "description": "Livro não encontrado"
          },
          "500": {
            "description": "Erro ao atualizar livro"
          }
        }
      },
      "delete": {
        "summary": "Deleta um livro por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Livro deletado com sucesso"
          },
          "404": {
            "description": "Livro não encontrado"
          },
          "500": {
            "description": "Erro ao deletar livro"
          }
        }
      }
    },
    "/authors": {
      "get": {
        "summary": "Lista todos os autores",
        "responses": {
          "200": {
            "description": "Lista de autores",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao obter autores"
          }
        }
      }
    },
    "/authors/{id}": {
      "get": {
        "summary": "Obtém um autor por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Autor encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Author"
                }
              }
            }
          },
          "404": {
            "description": "Autor não encontrado"
          },
          "500": {
            "description": "Erro ao obter autor"
          }
        }
      },
      "post": {
        "summary": "Adiciona um novo autor",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Autor adicionado com sucesso"
          },
          "400": {
            "description": "Requisição inválida"
          },
          "500": {
            "description": "Erro ao adicionar autor"
          }
        }
      },
      "put": {
        "summary": "Atualiza um autor por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Autor atualizado com sucesso"
          },
          "400": {
            "description": "Requisição inválida"
          },
          "404": {
            "description": "Autor não encontrado"
          },
          "500": {
            "description": "Erro ao atualizar autor"
          }
        }
      },
      "delete": {
        "summary": "Deleta um autor por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Autor deletado com sucesso"
          },
          "404": {
            "description": "Autor não encontrado"
          },
          "500": {
            "description": "Erro ao deletar autor"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "Lista todos os pedidos",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pedidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Erro ao obter pedidos"
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "summary": "Obtém um pedido por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "404": {
            "description": "Pedido não encontrado"
          },
          "500": {
            "description": "Erro ao obter pedido"
          }
        }
      },
      "post": {
        "summary": "Cria um novo pedido",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Pedido criado com sucesso"
          },
          "400": {
            "description": "Requisição inválida"
          },
          "500": {
            "description": "Erro ao criar pedido"
          }
        }
      },
      "put": {
        "summary": "Atualiza um pedido por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido atualizado com sucesso"
          },
          "400": {
            "description": "Requisição inválida"
          },
          "404": {
            "description": "Pedido não encontrado"
          },
          "500": {
            "description": "Erro ao atualizar pedido"
          }
        }
      },
      "delete": {
        "summary": "Deleta um pedido por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Pedido deletado com sucesso"
          },
          "404": {
            "description": "Pedido não encontrado"
          },
          "500": {
            "description": "Erro ao deletar pedido"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "role": {
            "type": "string"
          }
        }
      },
      "Book": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "stock": {
            "type": "integer"
          }
        }
      },
      "Author": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "book": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "total": {
            "type": "number"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
